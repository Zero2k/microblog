---
- name: Install packages
  apt:
      name: 
        - nginx
        - python-certbot-nginx
      state: present

- name: Check if certificate already exists.
  stat:
      path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
  register: letsencrypt_cert

- debug: msg="{{ letsencrypt_cert.stat.exists }}"

- name: Stop services to allow certbot to generate a cert.
  command: service nginx stop
  when: not letsencrypt_cert.stat.exists

- name: Generate new certificate if one doesn't exist.
  shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email {{ admin_email }} -d {{ domain_name }} -d www.{{ domain_name }}"
  when: not letsencrypt_cert.stat.exists

- name: Remove default conf
  file:
      state: absent
      path: /etc/nginx/sites-enabled/default

- name: Template nginx conf
  template:
      src: nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: deploy
      group: deploy
      mode: "0400"

- name: Template load balancer conf
  template:
      src: load-balancer.conf.j2
      dest: /etc/nginx/sites-available/load-balancer.conf
      owner: deploy
      group: deploy
      mode: "0400"

- name: Create a symbolic link
  file:
      src: /etc/nginx/sites-available/load-balancer.conf
      dest: /etc/nginx/sites-enabled/load-balancer.conf
      owner: deploy
      group: deploy
      state: link

- name: Test nginx to see if it works
  command: sudo nginx -t

- name: Restart nginx
  command: sudo service nginx restart

- import_tasks: install_docker.yml

- name: Create exporter docker
  command: 
    docker run -p 9113:9113 -d nginx/nginx-prometheus-exporter:0.4.2 -nginx.scrape-uri=https://{{ domain_name }}/metrics -nginx.retries=10 -nginx.ssl-verify=false -web.telemetry-path=/prometheus

