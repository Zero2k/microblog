version: 2.1
orbs:
  snyk: snyk/snyk@0.0.8

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: zero2k/microblog
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  test:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run tests with docker
          command: |
            sudo apt-get install python3-venv
            python3 -m venv venv
            . venv/bin/activate
            make test
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest -f docker/Dockerfile_prod .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  build-kubernetes:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME-kubernetes:latest -f docker/Dockerfile_kubernetes .
      - run:
          name: Archive Docker image
          command: docker save -o image_kubernetes.tar $IMAGE_NAME-kubernetes
      - persist_to_workspace:
          root: .
          paths:
            - ./image_kubernetes.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
  publish-kubernetes:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image_kubernetes.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME-kubernetes:latest
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  deploy-aws:
    executor: docker-publisher
    working_directory: ~/microblog
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get install python3-venv
            python3 -m venv venv
      - run: echo "source ~/microblog/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install deploy dependencies
          command: pip3 install -r requirements/deploy.txt
      - run:
          name: Run appServer playbook
          command: |
              . ../venv/bin/activate
              ansible-playbook gather_aws_instances.yml appServer.yml
          working_directory: ansible
  snyk:
      docker:
          - image: circleci/python:3.5
      working_directory: ~/repo
      steps:
          - checkout
          - run:
              name: install dependencies
              command: |
                  python3 -m venv venv
                  . venv/bin/activate
                  make install
          - run: echo "source ~/repo/venv/bin/activate" >> $BASH_ENV # här gör vi så att så att CircleCi automatisk laddar venv och då kollar Snyk har installerat i den.
          - snyk/scan

workflows:
  version: 2
  build-master:
    jobs:
      - snyk:
          filters:
            branches:
              only: master
      - test:
          filters:
            branches:
              only: master
      - build:
          context: DOCKERHUB
          requires:
            - test
          filters:
            branches:
              only: master
      - build-kubernetes:
          context: DOCKERHUB
          requires:
            - test
          filters:
            branches:
              only: master
      - publish-latest:
          context: DOCKERHUB
          requires:
            - build
          filters:
            branches:
              only: master
      - publish-kubernetes:
          context: DOCKERHUB
          requires:
            - build-kubernetes
          filters:
            branches:
              only: master
  build-tags:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          context: DOCKERHUB
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-aws:
          requires:
            - publish-tag
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
